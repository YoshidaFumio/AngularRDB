/**
 * Default options for EntityDispatcher behavior
 * such as whether `add()` is optimistic or pessimistic by default.
 * An optimistic save modifies the collection immediately and before saving to the server.
 * A pessimistic save modifies the collection after the server confirms the save was successful.
 * This class initializes the defaults to the safest values.
 * Provide an alternative to change the defaults for all entity collections.
 */
import * as ɵngcc0 from '@angular/core';
export declare class EntityDispatcherDefaultOptions {
    /** True if added entities are saved optimistically; false if saved pessimistically. */
    optimisticAdd: boolean;
    /** True if deleted entities are saved optimistically; false if saved pessimistically. */
    optimisticDelete: boolean;
    /** True if updated entities are saved optimistically; false if saved pessimistically. */
    optimisticUpdate: boolean;
    /** True if upsert entities are saved optimistically; false if saved pessimistically. */
    optimisticUpsert: boolean;
    /** True if entities in a cache saveEntities request are saved optimistically; false if saved pessimistically. */
    optimisticSaveEntities: boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<EntityDispatcherDefaultOptions>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<EntityDispatcherDefaultOptions>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LWRpc3BhdGNoZXItZGVmYXVsdC1vcHRpb25zLmQudHMiLCJzb3VyY2VzIjpbImVudGl0eS1kaXNwYXRjaGVyLWRlZmF1bHQtb3B0aW9ucy5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7QUFRQTs7Ozs7Ozs7Ozs7OztBQVdBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBEZWZhdWx0IG9wdGlvbnMgZm9yIEVudGl0eURpc3BhdGNoZXIgYmVoYXZpb3JcbiAqIHN1Y2ggYXMgd2hldGhlciBgYWRkKClgIGlzIG9wdGltaXN0aWMgb3IgcGVzc2ltaXN0aWMgYnkgZGVmYXVsdC5cbiAqIEFuIG9wdGltaXN0aWMgc2F2ZSBtb2RpZmllcyB0aGUgY29sbGVjdGlvbiBpbW1lZGlhdGVseSBhbmQgYmVmb3JlIHNhdmluZyB0byB0aGUgc2VydmVyLlxuICogQSBwZXNzaW1pc3RpYyBzYXZlIG1vZGlmaWVzIHRoZSBjb2xsZWN0aW9uIGFmdGVyIHRoZSBzZXJ2ZXIgY29uZmlybXMgdGhlIHNhdmUgd2FzIHN1Y2Nlc3NmdWwuXG4gKiBUaGlzIGNsYXNzIGluaXRpYWxpemVzIHRoZSBkZWZhdWx0cyB0byB0aGUgc2FmZXN0IHZhbHVlcy5cbiAqIFByb3ZpZGUgYW4gYWx0ZXJuYXRpdmUgdG8gY2hhbmdlIHRoZSBkZWZhdWx0cyBmb3IgYWxsIGVudGl0eSBjb2xsZWN0aW9ucy5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRW50aXR5RGlzcGF0Y2hlckRlZmF1bHRPcHRpb25zIHtcbiAgICAvKiogVHJ1ZSBpZiBhZGRlZCBlbnRpdGllcyBhcmUgc2F2ZWQgb3B0aW1pc3RpY2FsbHk7IGZhbHNlIGlmIHNhdmVkIHBlc3NpbWlzdGljYWxseS4gKi9cbiAgICBvcHRpbWlzdGljQWRkOiBib29sZWFuO1xuICAgIC8qKiBUcnVlIGlmIGRlbGV0ZWQgZW50aXRpZXMgYXJlIHNhdmVkIG9wdGltaXN0aWNhbGx5OyBmYWxzZSBpZiBzYXZlZCBwZXNzaW1pc3RpY2FsbHkuICovXG4gICAgb3B0aW1pc3RpY0RlbGV0ZTogYm9vbGVhbjtcbiAgICAvKiogVHJ1ZSBpZiB1cGRhdGVkIGVudGl0aWVzIGFyZSBzYXZlZCBvcHRpbWlzdGljYWxseTsgZmFsc2UgaWYgc2F2ZWQgcGVzc2ltaXN0aWNhbGx5LiAqL1xuICAgIG9wdGltaXN0aWNVcGRhdGU6IGJvb2xlYW47XG4gICAgLyoqIFRydWUgaWYgdXBzZXJ0IGVudGl0aWVzIGFyZSBzYXZlZCBvcHRpbWlzdGljYWxseTsgZmFsc2UgaWYgc2F2ZWQgcGVzc2ltaXN0aWNhbGx5LiAqL1xuICAgIG9wdGltaXN0aWNVcHNlcnQ6IGJvb2xlYW47XG4gICAgLyoqIFRydWUgaWYgZW50aXRpZXMgaW4gYSBjYWNoZSBzYXZlRW50aXRpZXMgcmVxdWVzdCBhcmUgc2F2ZWQgb3B0aW1pc3RpY2FsbHk7IGZhbHNlIGlmIHNhdmVkIHBlc3NpbWlzdGljYWxseS4gKi9cbiAgICBvcHRpbWlzdGljU2F2ZUVudGl0aWVzOiBib29sZWFuO1xufVxuIl19